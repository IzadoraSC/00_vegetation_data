library(terra)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(mapview)
library(ggspatial)
library(units)
library(patchwork)
library(terra)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(mapview)
library(ggspatial)
library(units)
library(patchwork)
# Usando o pacote geobr-----
uc <- read_conservation_units()
uc
pncm <- uc |> filter(name_conservation_unit == 'PARQUE NACIONAL DA CHAPADA DAS MESAS')
plot(pncm$geom)
mapview(pncm)
ma <- read_state(code_state = 'MA')
br <- read_country()
biomas <- read_biomes()
ce <- biomas |> filter(name_biome == "Cerrado")
#map_data <- raster("F:/00_Classificacao/class_pncm2_raster.tif")
#map_data <- raster("F:/00_Classificacao/class_pncm.tif")
map_data <- raster("data/classif/class_pncm_sbsr_v2.tif")
library(raster)
library(rsacc)
library(RStoolbox)
library(ggplot2)
#map_data <- raster("F:/00_Classificacao/class_pncm2_raster.tif")
#map_data <- raster("F:/00_Classificacao/class_pncm.tif")
map_data <- raster("data/classif/class_pncm_sbsr_v2.tif")
#map_data <- raster("data/classif/reclass_20_rep.tif")
plot(map_data)
#val_polygon <- shapefile("F:/00_Classificacao/shape_valid2.shp")
#val_polygon <- shapefile('C:/Users/User/Documents/GitHub/classification_vegetation/python/shapefiles_validation_antigo/shape_valid2.shp')
val_polygon <- shapefile("data/classif/validacao.shp")
#val_polygon <- shapefile("F:/00_Classificacao/shape_valid2.shp")
val_polygon <- shapefile('C:/Users/User/Documents/GitHub/classification_vegetation/python/shapefiles_validation_antigo/shape_valid2.shp')
#val_polygon <- shapefile("data/classif/validacao.shp")
plot(val_polygon, add=T)
dplyr::glimpse(val_polygon)
cmat <- conf_mat(map_data,val_polygon,reproj=F,val_field="Class",na_val=0,use_extract=T)
cmat
#kia(cmat2)
kia(cmat)
pontius(cmat)
library(ggplot2)
library(ggplot2)
library(reshape2)
data(rlogo)
data(rlogo)
rlogo <- brick('data/raster/1985/stack_1985.tif')
ggRGB(rlogo, 3,2,1)
ggRGB(rlogo, 3,2,1)
library(reshape2)
ggRGB(rlogo, 3,2,1)
library(RStoolbox)
library(RStoolbox)
data(rlogo)
rlogo <- brick('data/raster/1985/stack_1985.tif')
ggRGB(rlogo, 3,2,1)
## Run PCA
set.seed(25)
rpc <- rasterPCA(rlogo)
rpc
## Model parameters:
summary(rpc$model)
loadings(rpc$model)
ggRGB(rpc$map,1,2,3, stretch="lin", q=0)
if(require(gridExtra)){
plots <- lapply(1:3, function(x) ggR(rpc$map, x, geom_raster = TRUE))
grid.arrange(plots[[1]],plots[[2]], plots[[3]], ncol=2)
}
#####
Sys.getenv("GITHUB_PAT") # ver token
usethis::use_git_config(user.name = "izadoraSC", user.email = "izadoraflorestal@gmail.com")
## create a personal access token for authentication:
usethis::create_github_token()
credentials::set_github_pat("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") #gasparzinho
usethis::git_sitrep()
#####
Sys.getenv("GITHUB_PAT") # ver token
usethis::git_sitrep() # verificar
br <- geobr::read_country(year = 2019)
?spectralIndices
wflow_rename_proj("vegetation_data")
## Vegetation Index no R ##
pacman::p_load(terra, raster, RStoolbox)
img <- brick('data/raster/1985/pncm_1985_clip_uint16.tif')
# carregando shp
shp <- terra::vect('data/shp/limite_pncm.shp')
plotRGB(img, r = 3, g = 2, b =1, stretch = 'lin')
View(img)
img
## Selecionando e Mudando o nome das bandas
img <- subset(img, c("B1", "B2", "B3", "B4", "B5", "B7","B1_1",
"B2_2", "B3_3", "B4_4", "B5_5", "B7_7"))
img
## Selecionando e Mudando o nome das bandas
names(img) = c("B1", "B2", "B3", "B4", "B5", "B7","B1_1",
"B2_2", "B3_3", "B4_4", "B5_5", "B7_7"))
## Selecionando e Mudando o nome das bandas
names(img) = c("B1", "B2", "B3", "B4", "B5", "B7","B1_1",
"B2_2", "B3_3", "B4_4", "B5_5", "B7_7")
img
# Calculando Indices com o pacote RSToolbox
#Landsat-5
ndvi_wet <- spectralIndices(img1, red = 'B3', nir = 'B4', indices = c("B13"))
plotRGB(img, r = 3, g = 2, b =1, stretch = 'lin')
# Calculando Indices com o pacote RSToolbox
#Landsat-5
ndvi_wet <- spectralIndices(img, red = 'B3', nir = 'B4', indices = c("B13"))
# Calculando Indices com o pacote RSToolbox
#Landsat-5
ndvi_wet <- spectralIndices(img, red = 'B3', nir = 'B4', indices = c("NDVI"))
names(ndvi_wet)
?spectralIndices
